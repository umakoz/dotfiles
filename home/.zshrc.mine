alias be="bundle exec"



function exists { which $1 &> /dev/null }

function cdup() {
  if [ -z "${BUFFER}" ]; then
    echo
    cd ..
    zle reset-prompt
  else
    zle self-insert '^'
  fi
}
zle -N cdup
bindkey '\^' cdup



##### docker #####
alias dl='docker ps -l -q'
alias docker_rm_all='docker rm $(docker ps -a -q)'



##### emacs #####
# http://masutaka.net/chalow/2011-09-28-1.html
## Invoke the ``dired'' of current working directory in Emacs buffer.
function dired () {
  emacsclient -e "(dired \"$1\")"
}

# https://gist.github.com/1247111
## Chdir to the ``default-directory'' of currently opened in Emacs buffer.
## for e2wm
function cde() {
  local emacs_cwd=`emacsclient -e "
   (expand-file-name
    (with-current-buffer (e2wm:current-buffer) default-directory))" | sed 's/^"\(.*\)"$/\1/'`
  cd "${emacs_cwd}"
}



##### peco #####
function peco-select-history() {
  local tac
  if exists tac; then
    tac="tac"
  else
    tac="tail -r"
  fi
  BUFFER=$(fc -l -n 1 | eval $tac | peco --query "$LBUFFER")
  CURSOR=$#BUFFER
  zle accept-line
}
zle -N peco-select-history
bindkey "^r" peco-select-history

function peco-select-directory() {
  local tac
  if exists tac; then
    tac="tac"
  else
    tac="tail -r"
  fi
  local selected=$(_z -r 2>&1 | eval $tac | peco --query "$LBUFFER" | awk '{ print $2 }')
  if [ -n "${selected}" ]; then
    BUFFER="cd ${selected}"
    CURSOR=$#BUFFER
    zle accept-line
    zle reset-prompt
  fi
}
zle -N peco-select-directory
bindkey "^j" peco-select-directory

function cdgem() {
  local gem_name=$(bundle list | sed -e 's/^ *\* *//g' | peco | cut -d \  -f 1)
  if [ -n "$gem_name" ]; then
    local gem_dir=$(bundle show ${gem_name})
    echo "cd to ${gem_dir}"
    cd ${gem_dir}
  fi
}

